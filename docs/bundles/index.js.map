{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/object-assign/index.js","webpack:///./src/index.js-exposed","webpack:///(webpack)/buildin/global.js","webpack:///./src/index.js","webpack:///./src/stylesheet.css?f724","webpack:///./src/stylesheet.css","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/chars-adapter.js","webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./src/data/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","undefined","TypeError","toObject","arguments","length","global","g","this","Function","eval","e","window","globalSystem","globalCompetition","globalPreset","globalUnits","adapter","data","objectAssign","globalChart","unitsPresets","seconds","label","valuePrecision","leftpad","reverseDrawOrder","formatValue","time","competition","howFaster","current","first","megapixels","size","operations","applyUnits","units","destroy","chartForCompetition","document","getElementById","applyPreset","set","createSelect","select","list","callback","elements","innerHTML","item","element","createElement","href","innerText","title","addEventListener","preventDefault","push","appendChild","createTextNode","className","setTopic","parent","topic","classList","theClass","substr","remove","add","populatePresets","presets","parentNode","style","display","selectItem","preset","populateSystems","systems","info","getElementsByClassName","applySystem","competitions","applyCompetition","default","populateCompetitions","OS","CPU","topics","getElementsByTagName","contains","getAttribute","setupUnits","competitionName","presetName","competitors","console","log","competitor","indexOf","content","options","hmr","transform","insertInto","locals","stylesInDom","isOldIE","fn","memo","apply","memoize","all","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","id","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","sourceMap","insertStyleElement","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","removeChild","idx","splice","createStyleElement","attrs","type","addAttrs","el","setAttribute","obj","update","result","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","Chart","defaults","defaultFontColor","myBar","bar","controllers","extend","getRuler","ruler","barWidth","barSpacing","maxForGroup","group","max","groups","chart","datasets","isDatasetVisible","calculateBarY","datasetIndex","me","meta","getMeta","yScale","getScaleForId","yAxisID","Number","getDataset","range","height","paddingTop","paddingBottom","min","pixel","bottom","Math","round","getPixelForValue","Controller","draw","ease","easingDecimal","clear","plugins","notify","helpers","each","boxes","box","chartArea","scale","dataset","getDatasetMeta","controller","_reverseDrawOrder","tooltip","transition","chartData","labels","animation","duration","legend","position","tooltips","titleFontFamily","titleFontSize","titleFontStyle","bodyFontFamily","bodyFontSize","bodySpacing","backgroundColor","titleMarginBottom","xPadding","yPadding","callbacks","tooltipItems","_chartInstance","text","preposition","rightpad","unitsLabel","yLabel","toFixed","scales","yAxes","gridLines","ticks","beginAtZero","xAxes","resultsLen","columns","lastGroup","results","slice","k","color","borderColor","borderWidth","presetArr","hidden","f","define","amd","self","u","a","require","code","1","2","colorNames","getRgba","string","rgb","match","parseInt","parseFloat","getHsla","alpha","isNaN","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","num","hexDouble","str","toString","toUpperCase","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","b","hslString","hwbString","hwb","keyword","reverseNames","6","3","convert","Color","valid","values","hsl","hsv","cmyk","setValues","red","lightness","v","w","whiteness","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","error","spaces","maxes","getValues","space","charAt","capped","chans","sname","args","Array","svalues","5","4","rgb2hsl","h","delta","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","x","y","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","floor","q","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","atan2","PI","sqrt","lab2rgb","lch2lab","lch","hr","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","func","arg","pair","exec","convs","routeSpace","fspace","7","Element","Interaction","layouts","platform","Ticks","register","initialize","Legend","_element","Title","pluginService","PluginBase","canvasHelpers","canvas","layoutService","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","40","45","48","49","53","54","55","56","57","58","8","9","Bar","context","config","Bubble","Doughnut","Line","PolarArea","Radar","Scatter","_set","hover","categoryPercentage","barPercentage","offset","offsetGridLines","axis","rectangle","borderSkipped","xLabel","DatasetController","dataElementType","Rectangle","stack","reset","ilen","rects","_ruler","updateElement","custom","rectangleOptions","_xScale","xAxisID","_yScale","_datasetIndex","_index","_model","datasetLabel","valueAtIndexOrDefault","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","center","width","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getStackCount","getStackIndex","stackCount","start","left","top","end","pixels","isNullOrUndef","barThickness","prev","curr","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","next","percent","chunk","computeFlexCategoryTraits","thickness","count","computeFitCategoryTraits","stackIndex","valueOrDefault","maxBarThickness","Infinity","clipArea","ctx","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","dataPoint","bubble","Point","points","point","xScale","_resolveElementOptions","dsIndex","getPixelForDecimal","NaN","_options","hitRadius","pointStyle","radius","skip","hoverRadius","resolve","dataIndex","animateRotate","animateScale","legendCallback","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","onClick","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","isArray","doughnut","pie","Arc","linkScales","noop","getRingIndex","ringIndex","opts","availableWidth","right","availableHeight","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","abs","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","area","capControlPoint","pt","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","angleLines","circular","pointLabels","polarArea","countVisibleElements","xCenter","yCenter","visibleCount","datasetStartAngle","distance","getDistanceFromCenterForValue","resetRadius","radar","_loop","pointElementOptions","pointPosition","getPointPositionForValue","scatter","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","positionIsHorizontal","types","instances","construct","configMerge","initConfig","acquireContext","uid","aspectRatio","_bufferedRender","retinaScale","devicePixelRatio","bindEvents","responsive","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","updated","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","newOptions","removeBox","updateConfig","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","method","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","listeners","_listeners","listener","eventHandler","events","removeEventListener","updateHoverStyle","enabled","changed","handleEvent","_start","bufferedRequest","animationDuration","hoverOptions","active","onHover","native","arrayEquals","arrayEvents","unlistenArrayEvents","array","stub","_chartjs","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","res","listenArrayEvents","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","scope","merge","configuration","_view","view","actual","origin","c0","c1","isFinite","interpolate","tooltipPosition","hasValue","isNumber","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","deltaX","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getRelativePosition","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingRight","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","container","clientWidth","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","handler","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","sort","ret","getArea","intersectsItem","inXRange","inYRange","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","padding","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","props","layoutOptions","toPadding","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","_plugins","_cacheId","plugin","unregister","getAll","hook","descriptor","params","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","zeroLineIndex","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleSpacing","titleFontColor","titleAlign","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","_titleFontFamily","_titleFontStyle","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","after","getAfterBody","getFooter","len","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","body","dataPoints","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","pos","eventPosition","nearestElement","tp","36","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","37","currentVM","globalOptionLineElements","lastDrawnIndex","lineCap","38","xRange","drawPoint","39","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","41","clearRect","roundedRect","rx","ry","rect","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","42","isObject","defaultValue","thisArg","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","43","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","44","matches","inputs","46","getContext","47","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","expand","shrink","_reset","scrollLeft","scrollTop","onScroll","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","watchForRender","removeResizeListener","unwatchForRender","_enabled","keyframes","_style","injectCSS","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","removeAttribute","proxies","event","fromNativeEvent","addEvent","removeEvent","basic","dom","implementation","filler","50","51","52","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","textSize","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","ceil","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","precision","generateTicks","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","numberOrZero","param","LinearRadialScale","drawingArea","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","momentify","parser","format","parse","input","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","factor","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","competitors_meta","imagemagick-6.8","opencv-3.1","opencv-3.3","skia-53","ipp-2017","vips-8.2","vips-8.5","pillow-2.0","pillow-2.7","pillow-simd-3.2-sse4","pillow-simd-3.2-avx2","pillow-3.3","pillow-simd-3.3-sse4","pillow-simd-3.3-avx2","pillow-3.4","pillow-simd-3.4-sse4","pillow-simd-3.4-avx2","pillow-4.3","pillow-simd-4.3-sse4","pillow-simd-4.3-avx2","competitions_meta","resample-4k-rgb","bil","bic","lzs","image-io-4k-rgb","blur-4k-rgb","filter-4k-rgb","transposition-4k-rgb","conversion-4k-rgb","composition-4k-rgb","full-cycle-4k-rgb","fillSystemWithMeta","system"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = global[\"partialCompetition\"] = require(\"-!./index.js\");","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","require(\"./stylesheet.css\");\n\nvar adapter = require(\"./chars-adapter\");\nvar data = require(\"./data/index\");\nvar objectAssign = require('object-assign');\n\n// Global chart instance. Should be destroyed every time.\nvar globalChart = null;\nvar globalSystem;\nvar globalCompetition;\nvar globalPreset;\nvar globalUnits;\n\nvar unitsPresets = {\n  seconds: {\n    label: 's',\n    valuePrecision: 4,\n    leftpad: 7,\n    reverseDrawOrder: false,\n    formatValue: function(time, competition) {\n      return time;\n    },\n    howFaster: function(current, first) {\n      return first / current;\n    }\n  },\n  megapixels: {\n    label: 'MP/s',\n    valuePrecision: 2,\n    leftpad: 7,\n    reverseDrawOrder: false,\n    formatValue: function(time, competition) {\n      var size = competition.source.size;\n      if (time)\n        return size[0] * size[1] / time / 1e6;\n    },\n    howFaster: function(current, first) {\n      return current / first;\n    }\n  },\n  operations: {\n    label: 'op/s',\n    valuePrecision: 2,\n    leftpad: 7,\n    reverseDrawOrder: false,\n    formatValue: function(time, competition) {\n      if (time)\n        return 1.0 / time;\n    },\n    howFaster: function(current, first) {\n      return current / first;\n    }\n  },\n}\n\n\nfunction partialCompetition(element, competitionName, presetName, units) {\n  var competitions = data.systems[0].competitions;\n  var competitors = [];\n  var i, competition, preset;\n\n  if ( ! units) {\n    units = 'seconds'\n  }\n\n  for (i = 0; i < competitions.length; i++) {\n    if (competitions[i].name == competitionName) {\n      competition = objectAssign({}, competitions[i]);\n      break;\n    }\n  }\n  if ( ! competition) {\n    console.log('Competition ' + competitionName + ' is not found.');\n    return;\n  }\n\n  if (presetName) {\n    if (typeof presetName === \"string\") {\n      for (i = 0; i < competition.presets.length; i++) {\n        if (competition.presets[i].name == presetName) {\n          preset = competition.presets[i].set;\n          break\n        }\n      }\n      if ( ! preset) {\n        console.log('Preset ' + presetName + ' is not found.');\n        return;\n      }\n    } else {\n      preset = presetName;\n    }\n\n    for (i = 0; i < competition.competitors.length; i++) {\n      var competitor = competition.competitors[i];\n      if (preset.indexOf(competitor.name) > -1) {\n        competitors.push(competitor);\n      }\n    }\n\n    competition.competitors = competitors;\n  }\n\n  return adapter.chartForCompetition(\n    element,\n    competition,\n    unitsPresets[units]\n  );\n}\n\n\nfunction applyUnits(units) {\n  globalUnits = units;\n\n  if (globalChart) {\n    globalChart.destroy();\n  }\n\n  globalChart = adapter.chartForCompetition(\n    document.getElementById(\"chart-container\"),\n    globalCompetition,\n    unitsPresets[globalUnits]\n  );\n\n  if (globalPreset) {\n    adapter.applyPreset(globalChart, globalPreset.set);\n  }\n}\n\n\nfunction createSelect(select, list, callback) {\n  var elements = [];\n  select.innerHTML = '';\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var element = document.createElement('a');\n    element.href = '#';\n    element.innerText = item.title;\n    element.addEventListener('click', function(e) {\n      e.preventDefault();\n    });\n    elements.push(element);\n    select.appendChild(document.createElement('li')).appendChild(element);\n    select.appendChild(document.createTextNode(\" \"));\n    callback(i, element, item);\n  }\n\n  function selectItem(n) {\n    for (var i = 0; i < elements.length; i++) {\n      var element = elements[i];\n      element.className = (n == i) ? 'selected' : '';\n    }\n  }\n\n  return selectItem;\n}\n\n\nfunction setTopic(parent, topic) {\n  for (var i = 0; i < parent.classList.length; i++) {\n    var theClass = parent.classList[i];\n    if (theClass.substr(0, 'topic__'.length) == 'topic__') {\n      parent.classList.remove(theClass);\n    }\n  }\n  if (topic) {\n    parent.classList.add('topic__' + topic);\n  }\n}\n\n\nfunction populatePresets(presets) {\n  var select = document.getElementById(\"select-preset\");\n  var parent = select.parentNode;\n\n  parent.style.display = presets.length ? 'block' : 'none';\n\n  var selectItem = createSelect(select, presets, function(i, element) {\n    element.addEventListener('click', applyPreset.bind(null, i));\n  });\n\n  function applyPreset(n) {\n    var preset = presets[n];\n    globalPreset = preset;\n    selectItem(n);\n    setTopic(parent, preset.topic);\n    adapter.applyPreset(globalChart, preset.set);\n  }\n  return applyPreset;\n}\n\n\nfunction populateCompetitions(competitions) {\n  var select = document.getElementById(\"select-competition\");\n  var parent = select.parentNode;\n  var info = parent.getElementsByClassName('info')[0];\n  \n  var selectItem = createSelect(select, competitions, function(i, element) {\n    element.addEventListener('click', applyCompetition.bind(null, i));\n  });\n\n  function applyCompetition(n) {\n    var competition = competitions[n];\n    globalCompetition = competition;\n\n    if (globalChart) {\n      globalChart.destroy();\n    }\n\n    globalChart = adapter.chartForCompetition(\n      document.getElementById(\"chart-container\"),\n      competition,\n      unitsPresets[globalUnits]\n    );\n\n    var innerHTML = \"\";\n    if (competition.topic) {\n      innerHTML = '<a class=\"pseudo\" href=\"#' +\n        competition.topic + '\">More info about operation</a>';\n    }\n    info.innerHTML = innerHTML;\n\n    selectItem(n);\n\n    setTopic(parent, competition.topic);\n\n    if (competition.presets) {\n      var applyPreset = populatePresets(competition.presets);\n\n      for (var i = 0; i < competition.presets.length; i++) {\n        if (competition.presets[i].default) {\n          applyPreset(i);\n          break;\n        }\n      }\n    } else {\n      populatePresets([]);\n      globalPreset = null;\n    }\n  }\n  return applyCompetition;\n}\n\n\nfunction populateSystems(systems) {\n  var select = document.getElementById(\"select-system\");\n  var parent = select.parentNode;\n  var info = parent.getElementsByClassName('info')[0];\n  \n  var selectItem = createSelect(select, systems, function(i, element) {\n    element.addEventListener('click', applySystem.bind(null, i));\n  });\n\n  function applySystem(n) {\n    globalSystem = systems[n];\n    var applyCompetition = populateCompetitions(globalSystem.competitions);\n    applyCompetition(0);\n    \n    selectItem(n);\n\n    var innerHTML = \"\";\n    if (globalSystem.OS) {\n      innerHTML += \"<strong>OS</strong> \" + globalSystem.OS + \"<br>\";\n    }\n    if (globalSystem.CPU) {\n      innerHTML += \"<strong>CPU</strong> \" + globalSystem.CPU + \"<br>\";\n    }\n    info.innerHTML = innerHTML;\n  }\n\n  return applySystem;\n}\n\n\nfunction setupUnits() {\n  var topics = document.getElementById('switch-units').getElementsByTagName(\"a\");\n\n  for (var i = 0; i < topics.length; i++) {\n    if (topics[i].classList.contains('selected')) {\n      globalUnits = topics[i].getAttribute('data-unit');\n    }\n\n    topics[i].addEventListener('click', function(e) {\n      for (var i = 0; i < topics.length; i++) {\n        topics[i].classList.remove('selected');\n      }\n      this.classList.add('selected');\n      applyUnits(this.getAttribute('data-unit'));\n\n      e.preventDefault();\n    });\n  }\n}\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n\n  var applySystem = populateSystems(data.systems);\n  setupUnits();\n  applySystem(0);\n  \n});\n\nmodule.exports = partialCompetition;\n","\nvar content = require(\"!!../node_modules/postcss-loader/lib/index.js??ref--4-1!./stylesheet.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/postcss-loader/lib/index.js??ref--4-1!./stylesheet.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/postcss-loader/lib/index.js??ref--4-1!./stylesheet.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \"html {\\n    padding: 0;\\n    margin: 0;\\n    font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\\n    font-size: 14px;\\n    line-height: 1.5;\\n}\\nbody {\\n    min-width: 690px;\\n    max-width: 1100px;\\n    padding: 2%;\\n    margin: 0 auto;\\n}\\n\\nh1, h2, h3, h4 {\\n    font-family: 'Roboto Condensed', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\\n    font-weight: 700;\\n    margin-bottom: 0;\\n}\\nh1 {\\n    font-size: 2.5em;\\n}\\nh2 {\\n    font-size: 2em;\\n}\\nh3 {\\n    font-size: 1.3em;\\n}\\nh4 {\\n    color: #aaa;\\n    margin-bottom: 0;\\n    font-size: 1.1em;\\n}\\na {\\n    color: #000095;\\n}\\na.pseudo {\\n    text-decoration: none;\\n    border-bottom: 1px dashed;\\n}\\na.pseudo.selected {\\n    text-decoration: none;\\n    border-bottom: none;\\n    color: inherit;\\n    font-weight: bold;\\n}\\nul, p {\\n    margin-bottom: 0;\\n}\\n\\ncode {\\n    padding: 0 3px;\\n    font-family: 'Inconsolata', monospace;\\n    border-radius: 2px;\\n    border: 1px solid #ececec;\\n    background: #f8f8f8;\\n}\\n\\nul.select {\\n    padding: 0;\\n    margin: 0;\\n    list-style-type: none;\\n}\\n    ul.select > li {}\\n        ul.select > li> a {\\n            text-decoration: none;\\n        }\\n        ul.select > li> a.selected {\\n            color: inherit;\\n            text-decoration: none;\\n            font-weight: bold;\\n            border-bottom: 0px;\\n            cursor: default;\\n        }\\nul.select.-large {\\n    font-size: 16px;\\n}\\n\\n.selects-grid {\\n    display: flex;\\n    margin-top: 40px;\\n}\\n    .selects-grid__cell {\\n        position: relative;\\n        margin-right: 4%;\\n        margin-bottom: 4%;\\n    }\\n    .selects-grid__cell:last-child {\\n        margin-right: 0;\\n    }\\n        .selects-grid__cell::before {\\n            content: \\\"\\\";\\n            display: block;\\n            position: absolute;\\n            left: -14px;\\n            right: -14px;\\n            top: -14px;\\n            bottom: -14px;\\n            background: #f8f8f8;\\n            z-index: -1;\\n        }\\n        .selects-grid__cell > :first-child {\\n            margin-top: 0;\\n        }\\n    .selects-grid__system {\\n        min-width: 24%;\\n    }\\n    .selects-grid__competition {\\n        min-width: 30%;\\n    }\\n    .selects-grid__chartset {\\n        min-width: 20%;\\n    }\\n\\n#switch-units {\\n    text-align: right;\\n    position: relative;\\n    top: -1em;\\n}\\n\\n#select-preset {\\n    float: left;\\n    margin-right: 20px;\\n}\\n\\nsection {\\n    margin-top: 50px;\\n}\\n    section p {\\n        max-width: 690px;\\n    }\\n.chart {\\n    margin-top: 40px;\\n    max-width: 860px;\\n}\\n\\n.samples {\\n    display: flex;\\n    flex-wrap: wrap;\\n}\\n    .samples figure {\\n        margin: 1em 30px 0 0;\\n    }\\n    .samples figure:last-child {\\n        margin-right: 0;\\n    }\\n    .samples figcaption {\\n        font-family: 'Roboto Condensed', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\\n        font-weight: 700;\\n        color: #666;\\n        margin: 0;\\n    }\\n\\ndl.libraries {\\n    max-width: 690px;\\n}\\n    dl.libraries dt {\\n        float: left;\\n        margin-right: 10px;\\n\\n        font-family: 'Roboto Condensed', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\\n        font-weight: 700;\\n        color: #333;\\n        font-size: 16px;\\n    }\\n    dl.libraries dd {\\n        margin: 0 0 12px 120px;\\n    }\\n    dl.libraries dd:after {\\n        content: \\\"\\\";\\n        display: block;\\n        clear: left;\\n    }\\n\"","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","var Chart = require(\"chart.js/dist/Chart.js\");\n\nChart.defaults.global.defaultFontColor = 'black';\nChart.defaults.myBar = Chart.defaults.bar;\nChart.controllers.myBar = Chart.controllers.bar.extend({\n    // Increase bars width\n    getRuler: function(index) {\n        var ruler = Chart.controllers.bar.prototype.getRuler.call(this, index);\n        ruler.barWidth += 10;\n        ruler.barSpacing -= 10;\n        return ruler;\n    },\n    maxForGroup: function(group) {\n        var max = null;\n        var groups = this.chart.data.groups;\n        var datasets = this.chart.data.datasets;\n        for (var j = 0; j < groups.length; j++) {\n            if (group != groups[j]) {\n                continue;\n            }\n            for (var i = 0; i < datasets.length; i++) {\n                var value = datasets[i].data[j];\n\n                if ( ! this.chart.isDatasetVisible(i) || ! value) {\n                    continue;\n                }\n                if (max === null || value > max) {\n                    max = value;\n                }\n            }\n        }\n        return max;\n    },\n    calculateBarY: function(index, datasetIndex) {\n        var me = this;\n        var meta = me.getMeta();\n        var yScale = me.getScaleForId(meta.yAxisID);\n        var value = Number(me.getDataset().data[index]);\n\n        if (me.chart.data.groups && me.chart.data.groups.length) {\n            var group = me.chart.data.groups[index];\n            var max = me.maxForGroup(group);\n\n            me = yScale;\n            var innerDimension = me.height - (me.paddingTop + me.paddingBottom);\n            var range = innerDimension / (max - me.min);\n            var pixel = (me.bottom - me.paddingBottom) - (range * (value - me.min));\n            return Math.round(pixel);\n        }\n\n        return yScale.getPixelForValue(value);\n    }\n});\n\nChart.Controller.prototype.draw = function(ease) {\n    var me = this;\n    var easingDecimal = ease || 1;\n    me.clear();\n\n    Chart.plugins.notify('beforeDraw', [me, easingDecimal]);\n\n    // Draw all the scales\n    Chart.helpers.each(me.boxes, function(box) {\n        box.draw(me.chartArea);\n    }, me);\n    if (me.scale) {\n        me.scale.draw();\n    }\n\n    Chart.plugins.notify('beforeDatasetsDraw', [me, easingDecimal]);\n\n    // Draw each dataset via its respective controller (reversed to support proper line stacking)\n    Chart.helpers.each(me.data.datasets, function(dataset, datasetIndex) {\n        if (me.isDatasetVisible(datasetIndex)) {\n            me.getDatasetMeta(datasetIndex).controller.draw(ease);\n        }\n    }, me, this.options._reverseDrawOrder);\n\n    Chart.plugins.notify('afterDatasetsDraw', [me, easingDecimal]);\n\n    // Finally draw the tooltip\n    me.tooltip.transition(easingDecimal).draw();\n\n    Chart.plugins.notify('afterDraw', [me, easingDecimal]);\n};\n\n\nfunction rightpad(s, size) {\n    while (s.length < size)\n        s += ' ';\n    return s;\n}\nfunction leftpad(s, size) {\n    while (s.length < size)\n        s = ' ' + s;\n    return s;\n}\n\n\nfunction chartForCompetition(element, competition, units) {\n  var chartData = {\n    type: 'myBar',\n    data: {\n      groups: [],\n      labels: [],\n      datasets: [],\n    },\n    options: {\n      _reverseDrawOrder: units.reverseDrawOrder,\n      title: {},\n      // maintainAspectRatio: false, \n      // responsive: false,\n      animation: {\n        duration: 0,\n      },\n      legend: {\n        display: false,\n        position: 'left',\n      },\n      tooltips: {\n        units: units.label,\n        mode: \"label\",\n        titleFontFamily: \"'Roboto Condensed', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n        titleFontSize: 14,\n        titleFontStyle: 'bold',\n        bodyFontFamily: \"'Inconsolata', monospace\",\n        bodyFontSize: 14,\n        bodySpacing: 4,\n        backgroundColor: 'rgba(0,0,0,0.9)',\n        titleMarginBottom: 10,\n        xPadding: 10,\n        yPadding: 10,\n        callbacks: {\n          title: function(tooltipItems, data) {\n            var chart = this._chartInstance.options.title.text;\n            var title = Chart.defaults.global.tooltips.callbacks.title(tooltipItems, data);\n            if (competition.preposition) {\n              chart += competition.preposition;\n            }\n            return chart + \" \" + title;\n          },\n          label: function(item, data) {\n            var chart = this._chartInstance;\n            var first;\n            for (var i = 0; i < data.datasets.length; i++) {\n              if ( ! chart.isDatasetVisible(i)) {\n                continue;\n              }\n              first = data.datasets[i].data[item.index];\n              if (first === null) {\n                continue;\n              }\n              break;\n            }\n            \n            var l = data.datasets[item.datasetIndex].label || '';\n            var label = \" \" + rightpad(l, 28);\n            var unitsLabel = chart.options.tooltips.units;\n            var value = item.yLabel.toFixed(units.valuePrecision);\n            var howFaster = units.howFaster(item.yLabel, first);\n            if (item.yLabel) {\n              label += leftpad('' + value, units.leftpad) + ' ' + unitsLabel;\n              if (item.yLabel != first) {\n                label += '  ' + howFaster.toFixed(2) + 'x faster';\n              }\n            }\n            return label;\n          }\n        }\n      },\n      scales: {\n        yAxes: [{\n          display: false,\n          gridLines: {display: false},\n          ticks: {beginAtZero: true},\n        }],\n        xAxes: [{\n          gridLines: {display: false},\n        }],\n      }\n    }\n  };\n\n  chartData.options.title.text = competition.title;\n\n  var resultsLen = competition.columns.length;\n\n  if (competition.competitors.length) {\n    var competitor = competition.competitors[0];\n    var lastGroup = null;\n\n    for (var j = 0; j < competitor.results.length; j++) {\n      var result = competitor.results[j];\n      var group = result.slice(0, -2).join(\"/\");\n\n      if (result.length != resultsLen) {\n        throw new Error(\"results length for \" +\n                        competitor.title + \" doesn't match required. \" +\n                        \"Got \" + result.length + \", expected \" + resultsLen);\n      }\n\n      var label = [];\n      for (var k = 0; k < result.length - 1; k++) {\n        if (competition.columns[k]['map']) {\n          label.push(competition.columns[k]['map'][result[k]])\n        } else {\n          label.push(result[k])\n        }\n      }\n\n      if (lastGroup && group != lastGroup) {\n        chartData.data.labels.push(\"\");\n        if (group) {\n          chartData.data.groups.push(\"\");\n        }\n      }\n      lastGroup = group;\n\n      chartData.data.labels.push(label.join(\" \"));\n      if (group) {\n        chartData.data.groups.push(group);\n      }\n    }\n  }\n\n  for (var i = 0; i < competition.competitors.length; i++) {\n    var competitor = competition.competitors[i];\n    var color = competitor.color;\n    var data = [];\n    var lastGroup = null;\n\n    if (typeof color != \"string\") {\n      color = \"hsla(\"+color[0]+\",\"+color[1]+\"%,\"+color[2]+\"%,1.0)\";\n    }\n\n    chartData.data.datasets.push({\n      label: competitor.title,\n      name: competitor.name,\n      data: data,\n      backgroundColor: color,\n      borderColor: \"rgba(255, 255, 255, .5)\",\n      borderWidth: 1,\n    });\n\n    for (var j = 0; j < competitor.results.length; j++) {\n      var result = competitor.results[j];\n      var group = result.slice(0, -2).join(\"/\");\n\n      if (lastGroup && group != lastGroup) {\n        data.push(null);\n      }\n      lastGroup = group;\n\n      data.push(units.formatValue(result[result.length - 1], competition));\n    }\n  }\n\n  return new Chart(element, chartData);\n}\n\n\nfunction applyPreset(chart, presetArr) {\n  var preset = {};\n  for (var i = 0; i < presetArr.length; i++) {\n    preset[presetArr[i]] = true;\n  }\n\n  for (var i = 0; i < chart.data.datasets.length; i++) {\n    var meta = chart.getDatasetMeta(i);\n    var dataset = chart.data.datasets[i];\n\n    meta.hidden = ! preset[dataset.name];\n  }\n\n  chart.update();\n}\n\n\nmodule.exports = {\n  Chart: Chart,\n  chartForCompetition: chartForCompetition,\n  applyPreset: applyPreset,\n};\n","/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 2.7.2\n *\n * Copyright 2018 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n/* MIT license */\nvar colorNames = require(6);\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n},{\"6\":6}],3:[function(require,module,exports){\n/* MIT license */\nvar convert = require(5);\nvar string = require(2);\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n},{\"2\":2,\"5\":5}],4:[function(require,module,exports){\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n},{}],5:[function(require,module,exports){\nvar conversions = require(4);\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n},{\"4\":4}],6:[function(require,module,exports){\n'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n},{}],7:[function(require,module,exports){\n/**\n * @namespace Chart\n */\nvar Chart = require(29)();\n\nChart.helpers = require(45);\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire(27)(Chart);\n\nChart.defaults = require(25);\nChart.Element = require(26);\nChart.elements = require(40);\nChart.Interaction = require(28);\nChart.layouts = require(30);\nChart.platform = require(48);\nChart.plugins = require(31);\nChart.Ticks = require(34);\n\nrequire(22)(Chart);\nrequire(23)(Chart);\nrequire(24)(Chart);\nrequire(33)(Chart);\nrequire(32)(Chart);\nrequire(35)(Chart);\n\nrequire(55)(Chart);\nrequire(53)(Chart);\nrequire(54)(Chart);\nrequire(56)(Chart);\nrequire(57)(Chart);\nrequire(58)(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire(15)(Chart);\nrequire(16)(Chart);\nrequire(17)(Chart);\nrequire(18)(Chart);\nrequire(19)(Chart);\nrequire(20)(Chart);\nrequire(21)(Chart);\n\nrequire(8)(Chart);\nrequire(9)(Chart);\nrequire(10)(Chart);\nrequire(11)(Chart);\nrequire(12)(Chart);\nrequire(13)(Chart);\nrequire(14)(Chart);\n\n// Loading built-it plugins\nvar plugins = require(49);\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n},{\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"17\":17,\"18\":18,\"19\":19,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"26\":26,\"27\":27,\"28\":28,\"29\":29,\"30\":30,\"31\":31,\"32\":32,\"33\":33,\"34\":34,\"35\":35,\"40\":40,\"45\":45,\"48\":48,\"49\":49,\"53\":53,\"54\":54,\"55\":55,\"56\":56,\"57\":57,\"58\":58,\"8\":8,\"9\":9}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],16:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],17:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],18:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],19:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],20:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],21:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n},{\"25\":25}],22:[function(require,module,exports){\n/* global window: false */\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n\n},{\"25\":25,\"26\":26,\"45\":45}],23:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar helpers = require(45);\nvar Interaction = require(28);\nvar layouts = require(30);\nvar platform = require(48);\nvar plugins = require(31);\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n},{\"25\":25,\"28\":28,\"30\":30,\"31\":31,\"45\":45,\"48\":48}],24:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(45);\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n},{\"45\":45}],25:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(45);\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n},{\"45\":45}],26:[function(require,module,exports){\n'use strict';\n\nvar color = require(3);\nvar helpers = require(45);\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n},{\"3\":3,\"45\":45}],27:[function(require,module,exports){\n/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require(3);\nvar defaults = require(25);\nvar helpers = require(45);\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n},{\"25\":25,\"3\":3,\"45\":45}],28:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(45);\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n},{\"45\":45}],29:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n},{\"25\":25}],30:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(45);\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n},{\"45\":45}],31:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar helpers = require(45);\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n},{\"25\":25,\"45\":45}],32:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\nvar Ticks = require(34);\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{\"25\":25,\"26\":26,\"34\":34,\"45\":45}],33:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar helpers = require(45);\nvar layouts = require(30);\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n},{\"25\":25,\"30\":30,\"45\":45}],34:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(45);\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n},{\"45\":45}],35:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n},{\"25\":25,\"26\":26,\"45\":45}],36:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n},{\"25\":25,\"26\":26,\"45\":45}],37:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n},{\"25\":25,\"26\":26,\"45\":45}],38:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n\n},{\"25\":25,\"26\":26,\"45\":45}],39:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n},{\"25\":25,\"26\":26}],40:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require(36);\nmodule.exports.Line = require(37);\nmodule.exports.Point = require(38);\nmodule.exports.Rectangle = require(39);\n\n},{\"36\":36,\"37\":37,\"38\":38,\"39\":39}],41:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(42);\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n\n},{\"42\":42}],42:[function(require,module,exports){\n'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n},{}],43:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(42);\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n},{\"42\":42}],44:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(42);\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n},{\"42\":42}],45:[function(require,module,exports){\n'use strict';\n\nmodule.exports = require(42);\nmodule.exports.easing = require(43);\nmodule.exports.canvas = require(41);\nmodule.exports.options = require(44);\n\n},{\"41\":41,\"42\":42,\"43\":43,\"44\":44}],46:[function(require,module,exports){\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n},{}],47:[function(require,module,exports){\n/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require(45);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n},{\"45\":45}],48:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(45);\nvar basic = require(46);\nvar dom = require(47);\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n},{\"45\":45,\"46\":46,\"47\":47}],49:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require(50);\nmodule.exports.legend = require(51);\nmodule.exports.title = require(52);\n\n},{\"50\":50,\"51\":51,\"52\":52}],50:[function(require,module,exports){\n/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],51:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\nvar layouts = require(30);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n},{\"25\":25,\"26\":26,\"30\":30,\"45\":45}],52:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\nvar layouts = require(30);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n},{\"25\":25,\"26\":26,\"30\":30,\"45\":45}],53:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n},{}],54:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar helpers = require(45);\nvar Ticks = require(34);\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n},{\"25\":25,\"34\":34,\"45\":45}],55:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(45);\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n},{\"45\":45}],56:[function(require,module,exports){\n'use strict';\n\nvar helpers = require(45);\nvar Ticks = require(34);\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n},{\"34\":34,\"45\":45}],57:[function(require,module,exports){\n'use strict';\n\nvar defaults = require(25);\nvar helpers = require(45);\nvar Ticks = require(34);\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n},{\"25\":25,\"34\":34,\"45\":45}],58:[function(require,module,exports){\n/* global window: false */\n'use strict';\n\nvar moment = require(1);\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require(25);\nvar helpers = require(45);\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n},{\"1\":1,\"25\":25,\"45\":45}]},{},[7])(7)\n});","var objectAssign = require('object-assign');\n\nvar competitors_meta = {\n  \"imagemagick-6.8\":      {\"color\": [230, 100, 70], \"title\": \"ImageMagick 6.8.9-9\"},\n  \"opencv-3.1\":           {\"color\": [240, 100, 60], \"title\": \"OpenCV 3.1.0\"},\n  \"opencv-3.3\":           {\"color\": [240, 100, 60], \"title\": \"OpenCV 3.3.0\"},\n  \"skia-53\":              {\"color\": [250, 100, 50], \"title\": \"Skia 53 SSE2\"},\n  \"ipp-2017\":             {\"color\": [250, 100, 30], \"title\": \"IPP 2017 AVX2\"},\n  \"vips-8.2\":             {\"color\": [250, 100, 30], \"title\": \"VIPS 8.2\"},\n  \"vips-8.5\":             {\"color\": [250, 100, 30], \"title\": \"VIPS 8.5\"},\n\n  \"pillow-2.0\":           {\"color\": [10, 90, 50], \"title\": \"PIL & Pillow 2.0 to 2.6\"},\n  \n  \"pillow-2.7\":           {\"color\": [340, 90, 43], \"title\": \"Pillow 2.7\"},\n  \"pillow-simd-3.2-sse4\": {\"color\": [340, 90, 75], \"title\": \"Pillow SIMD 3.2.0 SSE4\"},\n  \"pillow-simd-3.2-avx2\": {\"color\": [340, 90, 60], \"title\": \"Pillow SIMD 3.2.0 AVX2\"},\n  \n  \"pillow-3.3\":           {\"color\": [190, 90, 43], \"title\": \"Pillow 3.3\"},\n  \"pillow-simd-3.3-sse4\": {\"color\": [190, 90, 75], \"title\": \"Pillow SIMD 3.3.0 SSE4\"},\n  \"pillow-simd-3.3-avx2\": {\"color\": [190, 90, 60], \"title\": \"Pillow SIMD 3.3.0 AVX2\"},\n\n  \"pillow-3.4\":           {\"color\": [34, 90, 43], \"title\": \"Pillow 3.4.2\"},\n  \"pillow-simd-3.4-sse4\": {\"color\": [34, 90, 75], \"title\": \"Pillow SIMD 3.4.0 SSE4\"},\n  \"pillow-simd-3.4-avx2\": {\"color\": [34, 90, 60], \"title\": \"Pillow SIMD 3.4.0 AVX2\"},\n\n  \"pillow-4.3\":           {\"color\": [210, 90, 43], \"title\": \"Pillow 4.3.0\"},\n  \"pillow-simd-4.3-sse4\": {\"color\": [210, 90, 75], \"title\": \"Pillow SIMD 4.3.0 SSE4\"},\n  \"pillow-simd-4.3-avx2\": {\"color\": [210, 90, 60], \"title\": \"Pillow SIMD 4.3.0 AVX2\"},\n};\n\nvar competitions_meta = {\n  \"resample-4k-rgb\" : {\n    \"topic\": \"resampling\",\n    \"title\": \"Resize 2560x1600 RGB image\",\n    \"preposition\": \" to\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"resolution\", \"title\": \"Destination resolution\"},\n      {\n        \"name\": \"filter\",\n        \"title\": \"Convolution filter\",\n        \"map\": {\n          \"bil\": \"Bilinear\",\n          \"bic\": \"Bicubic\",\n          \"lzs\": \"Lanczos\"\n        }\n      },\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"image-io-4k-rgb\": {\n    \"title\": \"Input/Output 2560×1600 RGB image\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"operation\", \"title\": \"Operation\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"blur-4k-rgb\": {\n    \"topic\": \"blur\",\n    \"title\": \"Blur 2560×1600 RGB image\",\n    \"preposition\": \",\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"radius\", \"title\": \"Blur radius\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"filter-4k-rgb\": {\n    \"title\": \"Kernel filter 2560×1600 RGB image\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n        {\"name\": \"kernel\", \"title\": \"Kernel\"},\n        {\"name\": \"result\",\"units\": \"s\"}\n    ],\n  },\n  \"transposition-4k-rgb\": {\n    \"topic\": \"transposition\",\n    \"title\": \"Transpose 2560×1600 RGB image\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"operation\", \"title\": \"Operation\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"conversion-4k-rgb\": {\n    \"topic\": \"conversion\",\n    \"title\": \"Color conversion 2560×1600 image\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"modes\", \"title\": \"Modes\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"composition-4k-rgb\": {\n    \"topic\": \"compositing\",\n    \"title\": \"Composition two 2560×1600 RGBA images\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"radius\", \"title\": \"Blur radius\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"full-cycle-4k-rgb\": {\n    \"title\": \"Full opeations cycle, 2560×1600 RGB\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"operation\", \"title\": \"Operation\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n};\n\n\nfunction fillSystemWithMeta(system) {\n  var i, j;\n  system = objectAssign({}, system);\n\n  for (j = 0; j < system.competitions.length; j++) {\n  \tvar competition = system.competitions[j];\n  \tsystem.competitions[j] = competition = objectAssign(\n  \t\t{}, competitions_meta[competition.name], competition);\n\n  \tfor (i = 0; i < competition.competitors.length; i++) {\n  \t\tvar competitor = competition.competitors[i];\n  \t\tcompetition.competitors[i] = competitor = objectAssign(\n  \t\t\t{}, competitors_meta[competitor.name], competitor);\n  \t}\n  }\n  return system;\n}\n\nmodule.exports = {\n  systems: [\n\t  fillSystemWithMeta(require(\"./macbook.json\")),\n\t  fillSystemWithMeta(require(\"./c3.large.json\")),\n\t  fillSystemWithMeta(require(\"./c4.large.json\")),\n\t  fillSystemWithMeta(require(\"./amd.a10.7800.json\")),\n\t],\n};\n"],"sourceRoot":""}